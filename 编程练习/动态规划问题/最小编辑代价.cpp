/**************************************************************************************************
对于两个字符串A和B，我们需要进行插入、删除和修改操作将A串变为B串，定义c0，c1，c2分别为三种操作的代价，
请设计一个高效算法，求出将A串变为B串所需要的最少代价。
给定两个字符串A和B，及它们的长度和三种操作代价，请返回将A串变为B串所需要的最小代价。保证两串长度均小于等于300，且三种代价值均小于等于100。
测试样例：
"abc",3,"adc",3,5,3,100
返回：8

**********************************************************************************************/
 int findMinCost(string A, int n, string B, int m, int c0, int c1, int c2) {
        vector<vector<int>> dp;
		//初始化dp
        dp.resize(n+1);
        for (int i=0;i<=n;i++) dp[i].resize(m+1,0);
        for (int j=0;j<=m;j++) dp[0][j]=c0*j;
        for (int i=0;i<=n;i++) dp[i][0]=c1*i;
        //dp过程
		for (int i=1;i<=n;i++) {
            for (int j=1;j<=m;j++) {
                if (A[i-1]==B[j-1]) dp[i][j]=dp[i-1][j-1];
                else dp[i][j]=min(min(dp[i][j-1]+c0,dp[i-1][j]+c1),dp[i-1][j-1]+c2);
            }
        }
        return dp[n][m];
    }